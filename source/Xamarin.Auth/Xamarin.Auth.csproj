<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <WindowsTargetFrameworks Condition="'$(OS)' == 'Windows_NT'">
      uap10.0.10240; uap10.0.16299;
    </WindowsTargetFrameworks>
    <TargetFrameworks>
      netstandard2.0;
      xamarin.ios1.0;
      monoandroid7.0; monoandroid7.1; monoandroid8.0; monoandroid8.1;
      $(WindowsTargetFrameworks);

      netstandard1.0; portable-net45+win8+wp8+wpa81;
    </TargetFrameworks>
    <AssemblyName>Xamarin.Auth</AssemblyName>
    <RootNamespace>Xamarin.Auth</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Xamarin.Auth</PackageId>
    <PackageIconUrl>https://raw.githubusercontent.com/xamarin/Auth/master/icons/xamarin.auth_512x512.png</PackageIconUrl>
    <Summary>
      Xamarin.Auth helps you authenticate users via standard authentication
      mechanisms (e.g. OAuth 1.0 and 2.0), and store user credentials.
      It's also straightforward to add support for non-standard authentication schemes.
      The library is cross-platform, so once you learn it on iOS, you're all set on
      Android and Windows.
    </Summary>
    <PackageTags>xamarin, windows, uwp, ios, android, xamarin.forms, authentication, login</PackageTags>
    <Title>Xamarin.Auth</Title>
    <Description>
      A cross-platform API for authenticating users and storing their accounts.
    </Description>
    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyFileVersion>1.0.0.0</AssemblyFileVersion>
    <Version>1.0.0</Version>
    <Authors>Microsoft</Authors>
    <Owners>microsoft,Xamarin,XamarinNuGet</Owners>
    <NeutralLanguage>en</NeutralLanguage>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <RepositoryUrl>https://github.com/xamarin/Essentials</RepositoryUrl>
    <PackageReleaseNotes>See: https://github.com/xamarin/Xamarin.Auth</PackageReleaseNotes>
    <DefineConstants>$(DefineConstants);</DefineConstants>
    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
    <PackageLicenseUrl>https://go.microsoft.com/fwlink/?linkid=2021795</PackageLicenseUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageProjectUrl>https://go.microsoft.com/fwlink/?linkid=2021816</PackageProjectUrl>
 </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MSBuild.Sdk.Extras" Version="1.6.55" PrivateAssets="All" />
    <PackageReference Include="Microsoft.DotNet.BuildTools.GenAPI" Version="1.0.0-beta-00081" PrivateAssets="All" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
  </ItemGroup>

  <!-- and EVIL hack to make life a bit nicer -->
  <PropertyGroup Condition="$(TargetFramework.StartsWith('netstandard1')) or $(TargetFramework.StartsWith('portable'))">
  </PropertyGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('netstandard1')) or $(TargetFramework.StartsWith('portable'))">
    <Compile Remove="**\*.cs" />
    <Compile Remove="bin\$(Configuration)\netstandard2.0\Xamarin.Auth.cs" />
  </ItemGroup>

  <PropertyGroup Condition="$(TargetFramework.StartsWith('netstandard'))">
    <DefineConstants>$(DefineConstants);__NETSTANDARD__</DefineConstants>
  </PropertyGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('netstandard'))">
    <Compile Remove="**\*.android.cs" />
    <Compile Remove="**\*.ios.cs" />
    <Compile Remove="**\*.uwp.cs" />
    <None Remove="Resources\**\*" />
  </ItemGroup>

  <PropertyGroup Condition="$(TargetFramework.StartsWith('xamarin.ios'))">
  </PropertyGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('xamarin.ios'))">
    <Reference Include="System.Runtime.Serialization" />
    <Compile Remove="**\*.android.cs" />
    <Compile Remove="**\*.uwp.cs" />
    <Compile Remove="**\*.netstandard.cs" />
    <None Remove="Resources\**\*" />
  </ItemGroup>

  <PropertyGroup Condition="$(TargetFramework.StartsWith('monoandroid'))">
  </PropertyGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('monoandroid'))">
    <Reference Include="System.Runtime.Serialization" />
    <Compile Remove="**\*.ios.cs" />
    <Compile Remove="**\*.uwp.cs" />
    <Compile Remove="**\*.netstandard.cs" />
    <AndroidResource Include="Resources\**\*" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('monoandroid8.1')) ">
    <PackageReference Include="Xamarin.Android.Support.CustomTabs" Version="27.0.2.1" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('monoandroid8.0')) ">
    <PackageReference Include="Xamarin.Android.Support.CustomTabs" Version="26.1.0.1" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('monoandroid7.1')) ">
    <PackageReference Include="Xamarin.Android.Support.CustomTabs" Version="25.4.0.2" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('monoandroid7.0')) ">
    <PackageReference Include="Xamarin.Android.Support.CustomTabs" Version="24.2.1" />
  </ItemGroup>

  <PropertyGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <DefineConstants>$(DefineConstants);__UWP__</DefineConstants>
  </PropertyGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <PackageReference Include="Microsoft.NETCore.UniversalWindowsPlatform" Version="6.1.7" />
    <Compile Remove="**\*.android.cs" />
    <Compile Remove="**\*.ios.cs" />
    <Compile Remove="**\*.netstandard.cs" />
    <None Remove="Resources\**\*" />
  </ItemGroup>

  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />

  <Target Name="GenerateReferenceCode" Condition="$(TargetFramework.StartsWith('netstandard'))"
          AfterTargets="Build" DependsOnTargets="GenerateReferenceAssemblySource" />

</Project>
